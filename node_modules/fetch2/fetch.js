;(function(_fetch){
	"use strict";
	if(!_fetch){
		throw new Error("Browser not support 'fetch', include https://github.com/github/fetch");
	}


	function fetch2(url, options){
		if(!(this instanceof fetch2)){
			return new fetch2(url, options)
		}

		this.fetchPromise = _fetch.apply(null, arguments);
	}

	fetch2.prototype = {

		constructor:fetch2,

		then:function(onFulfilled, onRejected){
			this.fetchPromise = this.fetchPromise.then(onFulfilled, onRejected)
	    return this
		},

		json:function(response){
			return this.then((response)=>{
				return response.json()
			})
		},

		text:function(response){
			return this.then((response)=>{
				return response.text()
			})
		},

		body:function(){
			return this.then((response)=>{
				return response.body
			})	
		},

		header:function(key){
			return this.then((response)=>{
				return response.headers.get(key)
			})
		},

		headers:function(){
			return this.then((response)=>{
				var headers = {}
				response.headers.forEach((value, key)=>{
					headers[key] = value
				})
				return headers

			})
		},

		"catch":function( callback ){
			this.then(null, callback)
		}
	}

	//快捷方法
	fetch2.get = function(url, options){
		return fetch(url, Object.assign({method:"GET"}, options))
	}

	window.fetch2 = fetch2;

})(window.fetch);


